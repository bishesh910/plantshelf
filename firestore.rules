// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null; // regular users don't need email_verified
    }

    match /admins/{email} {
      allow read: if isSignedIn()
                  && request.auth.token.email == email
                  && request.auth.token.email_verified == true;
      allow write: if false;
    }

    match /users/{uid}/plants/{plantId} {
      allow read:    if isSignedIn() && request.auth.uid == uid;
      allow create, update:
        if isSignedIn() && request.auth.uid == uid && validPlant(request.resource.data);
      allow delete:  if isSignedIn() && request.auth.uid == uid;

      function validPlant(d) {
        return
          (d.name is string && d.name.size() >= 1 && d.name.size() <= 40) &&
          (d.nameLower == null || (d.nameLower is string && d.nameLower == lower(d.name))) &&
          (d.nickname == null || (d.nickname is string && d.nickname.size() <= 30)) &&
          (d.notes == null || (d.notes is string && d.notes.size() <= 1000)) &&
          (d.favorite == null || d.favorite is bool) &&
          (d.createdAt == null || d.createdAt is number) &&
          (d.updatedAt == null || d.updatedAt is number) &&
          (d.nextWaterAt == null || (d.nextWaterAt is string && d.nextWaterAt.matches('^\\d{4}-\\d{2}-\\d{2}$')));
      }
    }

    match /users/{uid}/{document=**} {
      allow read, write: if isSignedIn() && request.auth.uid == uid;
    }
  }
}
